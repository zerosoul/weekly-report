type Query {
  userList(skip: Int, first: Int, filter: UserFilterInput, orderBy: String): UserList!
  groupList(skip: Int, first: Int, filter: GroupFilterInput, orderBy: String): GroupList!
}
# 带分页的用户列表
type UserList {
  users: [User!]!
  pageSize: Int!
  current: Int!
  total: Int!
}
# 带分页的组列表
type GroupList {
  groups: [Group!]!
  pageSize: Int!
  current: Int!
  total: Int!
}
type Mutation {
  upsertUser(data: UserInput!): User!
  upsertGroup(data: GroupInput!): Group!
  removeGroup(id: ID!): Boolean!
  removeUser(id: ID!): Boolean!
}
# 用户输入项
input UserInput {
  id: ID
  email: String!
  name: String!
  createAt: String
  role: UserRole
  nickname: String
  avatar: String
  intro: String
  birthday: String
  sex: Int
}
# 组输入项
input GroupInput {
  id: ID
  name: String!
  createAt: String
  intro: String
  # users: [User!]
}
# 用户过滤项
input UserFilterInput {
  name_contains: String
  nickname_contains: String
  email_contains: String
}
# 组过滤项
input GroupFilterInput {
  name_contains: String
}
# 用户
type User {
  id: ID!
  createAt: String!
  name: String!
  nickname: String
  avatar: String
  email: String!
  intro: String
  birthday: String
  sex: Int!
  role: UserRole!
  group: [Group!]!
}
# 分组
type Group {
  id: ID!
  createAt: String!
  name: String!
  parent: Group
  intro: String
  users: [User!]!
}
# 周报
type Report {
  id: ID!
  title: String!
  status: ReportStatus!
  startTime: String!
  endTime: String!
  reportBy: User!
  items: [ReportItem!]!
}
# 周报每一项
type ReportItem {
  id: ID!
  type: ItemType!
  content: String!
  progress: String!
  remark: String
}
#周报状态
enum ReportStatus {
  UNSEND
  SEND
  SEND_FAIL
}
#每一项类型：已完成、下周要做的
enum ItemType {
  DONE
  TODO
}
#角色
enum UserRole {
  ADMIN
  LEADER
  MANAGER
  STAFF
}
# 发送记录
type SendRecord {
  id: ID!
  sendReport: Report!
  sendBy: User!
  createAt: String!
  success: Boolean!
}
